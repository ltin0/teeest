
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 5.0.0
 * Query Engine version: 6b0aef69b7cdfc787f822ecd7cdc76d5f1991584
 */
Prisma.prismaVersion = {
  client: "5.0.0",
  engine: "6b0aef69b7cdfc787f822ecd7cdc76d5f1991584"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Api_requestScalarFieldEnum = {
  id: 'id',
  name: 'name',
  request: 'request',
  response: 'response',
  created_at: 'created_at'
};

exports.Prisma.Auth_userScalarFieldEnum = {
  id: 'id',
  email: 'email',
  roles: 'roles',
  password: 'password',
  created_at: 'created_at',
  updated_at: 'updated_at',
  username: 'username'
};

exports.Prisma.Banner_more_profitableScalarFieldEnum = {
  id: 'id',
  banner_id: 'banner_id',
  slot_settings_id: 'slot_settings_id',
  banner_file_id: 'banner_file_id',
  name: 'name',
  game_url: 'game_url',
  created_at: 'created_at',
  updated_at: 'updated_at',
  active: 'active'
};

exports.Prisma.Banner_more_profitable_fileScalarFieldEnum = {
  id: 'id',
  file: 'file',
  upload_at: 'upload_at'
};

exports.Prisma.Bet_operationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  slot_game_id: 'slot_game_id',
  bet_transaction_id: 'bet_transaction_id',
  status: 'status',
  amount: 'amount',
  round_id: 'round_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Casino_most_popularScalarFieldEnum = {
  id: 'id',
  qty_lines: 'qty_lines',
  qty_columns: 'qty_columns'
};

exports.Prisma.Casino_most_popular_slot_gamesScalarFieldEnum = {
  casino_most_popular_id: 'casino_most_popular_id',
  slot_games_id: 'slot_games_id'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  settings_id: 'settings_id',
  key_id_prod: 'key_id_prod',
  key_secret_prod: 'key_secret_prod',
  key_id_stage: 'key_id_stage',
  key_secret_stage: 'key_secret_stage',
  currency: 'currency',
  language: 'language',
  url_return: 'url_return',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  prod_callback: 'prod_callback',
  stage_callback: 'stage_callback'
};

exports.Prisma.Client_auth_userScalarFieldEnum = {
  client_id: 'client_id',
  auth_user_id: 'auth_user_id'
};

exports.Prisma.Doctrine_migration_versionsScalarFieldEnum = {
  version: 'version',
  executed_at: 'executed_at',
  execution_time: 'execution_time'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  file: 'file',
  upload_at: 'upload_at'
};

exports.Prisma.Layout_colorsScalarFieldEnum = {
  id: 'id',
  settings_id: 'settings_id',
  name: 'name',
  hexadecimal: 'hexadecimal'
};

exports.Prisma.Live_casino_most_popularScalarFieldEnum = {
  id: 'id',
  qty_lines: 'qty_lines',
  qty_columns: 'qty_columns'
};

exports.Prisma.Live_casino_most_popular_slot_gamesScalarFieldEnum = {
  live_casino_most_popular_id: 'live_casino_most_popular_id',
  slot_games_id: 'slot_games_id'
};

exports.Prisma.Messenger_messagesScalarFieldEnum = {
  id: 'id',
  body: 'body',
  headers: 'headers',
  queue_name: 'queue_name',
  created_at: 'created_at',
  available_at: 'available_at',
  delivered_at: 'delivered_at'
};

exports.Prisma.OperationsScalarFieldEnum = {
  id: 'id',
  active: 'active',
  whithdraw_minimum: 'whithdraw_minimum',
  withdraw_maximum: 'withdraw_maximum',
  withdraw_fee: 'withdraw_fee',
  deposit_minimum: 'deposit_minimum',
  deposit_maximum: 'deposit_maximum',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProviderScalarFieldEnum = {
  id: 'id',
  name: 'name',
  client_percent: 'client_percent',
  base_percent: 'base_percent'
};

exports.Prisma.Referral_historyScalarFieldEnum = {
  id: 'id',
  referral_id: 'referral_id',
  user_id: 'user_id',
  game: 'game',
  amount: 'amount',
  type: 'type',
  available: 'available',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Referral_settingsScalarFieldEnum = {
  id: 'id',
  cpa: 'cpa',
  rev_share_percent: 'rev_share_percent',
  referral_type: 'referral_type'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  operations_id: 'operations_id',
  slot_settings_id: 'slot_settings_id',
  client_id: 'client_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Slot_gamesScalarFieldEnum = {
  id: 'id',
  provider_id: 'provider_id',
  uuid: 'uuid',
  name: 'name',
  image: 'image',
  type: 'type',
  has_lobby: 'has_lobby',
  is_mobile: 'is_mobile',
  has_freespins: 'has_freespins',
  has_tables: 'has_tables',
  freespin_valid_until_full_day: 'freespin_valid_until_full_day',
  slug: 'slug'
};

exports.Prisma.Slot_settingsScalarFieldEnum = {
  id: 'id',
  casino_most_popular_id: 'casino_most_popular_id',
  live_casino_most_popular_id: 'live_casino_most_popular_id'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  wallet_id: 'wallet_id',
  client_id: 'client_id',
  referral_id: 'referral_id',
  referral_settings_id: 'referral_settings_id',
  external_id: 'external_id',
  username: 'username',
  balance: 'balance',
  created_at: 'created_at',
  updated_at: 'updated_at',
  session: 'session',
  cpa_collected: 'cpa_collected',
  is_referrer: 'is_referrer'
};

exports.Prisma.WalletScalarFieldEnum = {
  id: 'id',
  balance: 'balance',
  bonus: 'bonus',
  bet: 'bet',
  withdraw: 'withdraw',
  deposit: 'deposit'
};

exports.Prisma.Wallet_transactionScalarFieldEnum = {
  id: 'id',
  wallet_id: 'wallet_id',
  amount: 'amount',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  type: 'type',
  api_collected: 'api_collected',
  user_id: 'user_id',
  uuid: 'uuid'
};

exports.Prisma.Salsa_gamesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  isSlot: 'isSlot',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  api_request: 'api_request',
  auth_user: 'auth_user',
  banner_more_profitable: 'banner_more_profitable',
  banner_more_profitable_file: 'banner_more_profitable_file',
  bet_operations: 'bet_operations',
  casino_most_popular: 'casino_most_popular',
  casino_most_popular_slot_games: 'casino_most_popular_slot_games',
  client: 'client',
  client_auth_user: 'client_auth_user',
  doctrine_migration_versions: 'doctrine_migration_versions',
  file: 'file',
  layout_colors: 'layout_colors',
  live_casino_most_popular: 'live_casino_most_popular',
  live_casino_most_popular_slot_games: 'live_casino_most_popular_slot_games',
  messenger_messages: 'messenger_messages',
  operations: 'operations',
  provider: 'provider',
  referral_history: 'referral_history',
  referral_settings: 'referral_settings',
  settings: 'settings',
  slot_games: 'slot_games',
  slot_settings: 'slot_settings',
  user: 'user',
  wallet: 'wallet',
  wallet_transaction: 'wallet_transaction',
  salsa_games: 'salsa_games'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
